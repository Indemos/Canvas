@inherits BaseView

<div @ref="ChartContainer" class="canvas-container space@(Name)" space>

  <div class="canvas-scale canvas-scale-n" @onmousemove="e => OnScaleAction(e, 1)">

    @if (Cursor?.X is not null)
    {
      <span class="canvas-label canvas-marker" style="left: @(Cursor?.Data.X)px"><b>@Cursor?.X</b></span>
    }

    @foreach (var o in Indices)
    {
      <span class="canvas-label" style="left: @(o.Marker)px"><b>@o.Caption</b></span>
    }

  </div>

  <div class="canvas-scale canvas-scale-s" @onmousemove="e => OnScaleAction(e, 1)">

    @if (Cursor is not null)
    {
      <span class="canvas-label canvas-marker" style="left: @(Cursor?.Data.X)px"><b>@Cursor?.X</b></span>
    }

    @foreach (var o in Indices)
    {
      <span class="canvas-label" style="left: @(o.Marker)px"><b>@o.Caption</b></span>
    }

  </div>

  <div class="canvas-scale canvas-scale-w" @onmousemove="e => OnScaleAction(e, -1)">

    @if (Cursor is not null)
    {
      <span class="canvas-label canvas-marker" style="top: @(Cursor?.Data.Y)px"><b>@Cursor?.Y</b></span>
    }

    @foreach (var o in Values)
    {
      <span class="canvas-label" style="top: @(o.Marker)px"><b>@o.Caption</b></span>
    }

  </div>

  <div class="canvas-scale canvas-scale-e" @onmousemove="e => OnScaleAction(e, -1)">

    @if (Cursor?.Y is not null)
    {
      <span class="canvas-label canvas-marker" style="top: @(Cursor?.Data.Y)px"><b>@Cursor?.Y</b></span>
    }

    @foreach (var o in Values)
    {
      <span class="canvas-label" style="top: @(o.Marker)px" alt="Canvas"><b>@o.Caption</b></span>
    }

  </div>

  <div class="canvas-view"
    @ref="Container"
    @onwheel="OnWheelAction"
    @onmousewheel="OnWheelAction"
    @onmousemove="OnMouseMoveAction"
    @onmouseout="OnMouseLeaveAction"
    @onmousedown="OnMouseDownAction">

    @if (Cursor is not null)
    {
      <div class="canvas-cross" style="background-position: @(Cursor?.Data.X)px 100%, 100% @(Cursor?.Data.Y)px"></div>

      @if (Series?.Count > 0)
      {
        <div class="canvas-board">

          @foreach (var series in Series)
          {
            <div class="canvas-board-item"><b>@series.Key:</b> @ShowSeries(series.Value)</div>
          }

        </div>
      }
    }

    @if (Route is not null)
    {
      <img alt="Chart" src="@Route" />
    }
  </div>

</div>

@{
  var images = string.Join(",", Indices.Concat(Values).Select(o => "linear-gradient(#DDD, #DDD)"));
  var sizes = string.Join(",", Indices.Select(o => "1px 100%").Concat(Values.Select(o => "100% 1px")));
  var positions = string.Join(",", Indices.Select(o => $"{o.Line}px 0").Concat(Values.Select(o => $"0 {o.Line}px")));
}

<style type="text/css">

  .canvas-container.space@(Name) .canvas-view img {
      background-size: @sizes;
      background-image: @images;
      background-position: @positions;
      background-repeat: no-repeat;
  }

</style>
